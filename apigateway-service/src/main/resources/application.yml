server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: localhost
    port: 5671
    username: guest
    password: guest
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE # 이동할 URI
#          predicates:
#            - Path=/user-service/** # 이동할 조건
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
              - Path=/user-service/login
              - Method=Post
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
              - Path=/user-service/users
              - Method=Post
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
              - Path=/user-service/**
              - Method=Get
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=Get, Post
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          uri: lb://CATALOG-SERVICE # 이동할 URI
          predicates:
            - Path=/catalog-service/** # 이동할 조건
        - id: order-service
          uri: lb://ORDER-SERVICE # 이동할 URI
          predicates:
            - Path=/order-service/** # 이동할 조건

        - id: first-service
          uri: lb://MY-FIRST-SERVICE # 이동할 URI
          predicates:
            - Path=/first-service/** # 이동할 조건
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter # 순서대로 필터가 실행됨
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh


token:
  secret: user_token
